(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{223:function(n,t,e){"use strict";e.r(t);var a=e(28),o=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h3",{attrs:{id:"flutter-基础（三）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flutter-基础（三）"}},[n._v("#")]),n._v(" Flutter 基础（三）")]),n._v(" "),e("h4",{attrs:{id:"_1-底部导航"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-底部导航"}},[n._v("#")]),n._v(" 1. 底部导航")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import 'package:flutter/material.dart';\nimport 'home_screen.dart';\nimport 'email_screen.dart';\nimport 'pages_screen.dart';\nimport 'airplay_screen.dart';\n\nclass BottomNavigation extends StatefulWidget {\n  final Widget child;\n\n  BottomNavigation({Key key, this.child}) : super(key: key);\n\n  _BottomNavigationState createState() => _BottomNavigationState();\n}\n\nclass _BottomNavigationState extends State<BottomNavigation> {\n\n  final _BottomNavigationColor = Colors.blueGrey;\n  final _BottomNavigationActiveColor = Colors.blueAccent;\n  int _currentIndex = 0;\n  var appBarTitles = ['首页', '邮件', '发现', '我的'];\n  List<Widget> list = List();\n  @override\n  void initState() {\n    // TODO: implement initState\n    list..add(HomeScreen())..add(EmailScreen())..add(PageScreen())..add(AirplayScreen());\n    super.initState();\n  }\n  \n  Text getTableTitle(int curIndex) {\n    if(curIndex == _currentIndex) {\n      return Text(\n        appBarTitles[curIndex],\n        style: TextStyle(\n          color: _BottomNavigationActiveColor\n        ),\n      );\n    }\n    return Text(\n      appBarTitles[curIndex],\n      style: TextStyle(\n        color: _BottomNavigationColor\n      ),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: list[_currentIndex],\n      bottomNavigationBar: BottomNavigationBar(\n        items: [\n          BottomNavigationBarItem(\n            icon: Icon(\n              Icons.home,\n              color: _BottomNavigationColor\n            ),\n            activeIcon: Icon(\n              Icons.airplay,\n              color: _BottomNavigationActiveColor,\n            ),\n            title: getTableTitle(0)\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(\n              Icons.email,\n              color: _BottomNavigationColor,\n            ),\n            activeIcon: Icon(\n              Icons.airplay,\n              color: _BottomNavigationActiveColor,\n            ),\n            title: getTableTitle(1)\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(\n              Icons.pages,\n              color: _BottomNavigationColor,\n            ),\n            activeIcon: Icon(\n              Icons.airplay,\n              color: _BottomNavigationActiveColor,\n            ),\n            title: getTableTitle(2)\n          ),\n          BottomNavigationBarItem(\n            icon: Icon(\n              Icons.airplay,\n              color: _BottomNavigationColor,\n            ),\n            activeIcon: Icon(\n              Icons.airplay,\n              color: _BottomNavigationActiveColor,\n            ),\n            title: getTableTitle(3)\n          )\n        ],\n        currentIndex: _currentIndex,\n        onTap: (int index) {\n          setState(() {\n            _currentIndex = index;\n          });\n        },\n        type: BottomNavigationBarType.fixed,\n      ),\n    );\n  }\n}\n")])])]),e("h4",{attrs:{id:"_2-不规则底部工具栏"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-不规则底部工具栏"}},[n._v("#")]),n._v(" 2.不规则底部工具栏")]),n._v(" "),e("p",[n._v("自定义主题样本：primarySwatch ：现在支持18种主题样本了。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("theme: ThemeData(\n  primarySwatch: Colors.lightBlue,\n),\n")])])]),e("p",[e("strong",[n._v("floatingActionButton")])]),n._v(" "),e("p",[n._v("floatingActionButton工作中我们通常简称它为“FAB”，也许只是我们公司这样称呼，从字面理解可以看出，它是“可交互的浮动按钮”")]),n._v(" "),e("ul",[e("li",[n._v("onPressed ：点击相应事件，最常用的一个属性。")]),n._v(" "),e("li",[n._v("tooltip：长按显示的提示文字，因为一般只放一个图标在上面，防止用户不知道，当我们点击长按时就会出现一段文字性解释。非常友好，不妨碍整体布局。")]),n._v(" "),e("li",[n._v("child ：放置子元素，一般放置Icon Widget。")]),n._v(" "),e("li")]),n._v(" "),e("p",[n._v("写完这些代码已经有了一个悬浮的按钮，但这个悬浮按钮还没有和低栏进行融合，这时候需要一个属性。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,\n")])])]),e("p",[e("strong",[n._v("BottomAppBar Widget")]),n._v("\nBottomAppBar 是 底部工具栏的意思，这个要比BottomNavigationBar widget灵活很多，可以放置文字和图标，当然也可以放置容器。")]),n._v(" "),e("p",[n._v("BottomAppBar的常用属性:")]),n._v(" "),e("ul",[e("li",[n._v("color:这个不用多说，底部工具栏的颜色。")]),n._v(" "),e("li",[n._v("shape：设置底栏的形状，一般使用这个都是为了和floatingActionButton融合，所以使用的值都是CircularNotchedRectangle(),有缺口的圆形矩形。")]),n._v(" "),e("li",[n._v("child ： 里边可以放置大部分Widget，让我们随心所欲的设计底栏。")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import 'package:flutter/material.dart';\nimport 'each_view.dart';\n\nclass BottomAppBarExample extends StatefulWidget {\n\n  _BottomAppBarExampleState createState() => _BottomAppBarExampleState();\n\n}\n\nclass _BottomAppBarExampleState extends State<BottomAppBarExample> {\n\n  List<Widget> _eachView;\n  int _index = 0; \n  @override\n  void initState() {\n    super.initState();\n    _eachView = List();\n    _eachView..add(EachView('Home'))..add(EachView('Me'));\n    // TODO: implement initState\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: _eachView[_index],\n      floatingActionButton: FloatingActionButton(\n        onPressed: (){\n          Navigator.push(context, MaterialPageRoute(builder: (BuildContext context){\n            return EachView('New pages');\n          }));\n        },\n        tooltip: 'FAB Button',\n        backgroundColor: Colors.red,\n        child: Icon(\n          Icons.add,\n          color: Colors.white\n        ),\n      ),\n      floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,\n      bottomNavigationBar: BottomAppBar(\n        color: Colors.red,\n        shape: CircularNotchedRectangle(),\n        child: Row(\n          mainAxisSize: MainAxisSize.max,\n          mainAxisAlignment: MainAxisAlignment.spaceAround,\n          children: <Widget>[\n            IconButton(\n              icon: Icon(Icons.home),\n              color:Colors.white,\n              onPressed: () {\n                setState(() {\n                  _index = 0;\n                });\n              },\n            ),\n            IconButton(\n              icon: Icon(Icons.airport_shuttle),\n              color:Colors.white,\n              onPressed: () {\n                setState(() {\n                  _index = 1;\n                });\n              },\n            )\n          ],\n        ),\n      ),\n    );\n  }\n}\n")])])]),e("h4",{attrs:{id:"_3-酷炫的路由动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-酷炫的路由动画"}},[n._v("#")]),n._v(" 3. 酷炫的路由动画")]),n._v(" "),e("p",[n._v("AppBar Widger的 elevation 属性：这个值是AppBar 滚动时的融合程度，一般有滚动时默认是4.0，现在我们设置成0.0，就是和也main完全融合了。\nmain.dart")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import 'package:flutter/material.dart';\nimport 'custom_router.dart';\n\nvoid main(List<String> args) {\n  runApp(\n    MyApp()\n  );\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Fullter demo',\n      theme: ThemeData(\n        primarySwatch: Colors.blue\n      ),\n      home: FirstPage(),\n    );\n  }\n}\n\nclass FirstPage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.blue,\n      appBar: AppBar(\n        title: Text('First Page', style:TextStyle(fontSize: 16.0)),\n        elevation: 0.0,\n      ),\n      body: Center(\n        child: MaterialButton(\n          child: Icon(\n            Icons.navigate_next,\n            color: Colors.white,\n            size: 64.0,\n          ),\n          onPressed: (){\n            Navigator.push(context, CustomRouter(SecondPage()));\n          },\n        )\n      ),\n    );\n  }\n}\n\nclass SecondPage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.pink,\n      appBar: AppBar(\n        title: Text('Second Page'),\n        elevation: 0.0,\n        backgroundColor: Colors.pink,\n      ),\n      body: Center(\n        child: MaterialButton(\n          child: Icon(\n            Icons.navigate_before,\n            color: Colors.white,\n            size: 64.0,\n          ),\n          onPressed: (){\n            Navigator.pop(context);\n          },\n        ),\n      )\n    );\n  }\n}\n")])])]),e("p",[n._v("custom_router")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import 'package:flutter/material.dart';\n\nclass CustomRouter extends PageRouteBuilder {\n  final Widget widget;\n  CustomRouter(this.widget):super(\n    transitionDuration: Duration(seconds: 1),\n    pageBuilder: (\n      BuildContext context,\n      Animation<double> animation1,\n      Animation<double> animation2){\n        return widget;\n    },\n    transitionsBuilder:(\n      BuildContext context,\n      Animation<double> animation1,\n      Animation<double> animation2,\n      Widget child){\n        return FadeTransition(\n          opacity: Tween(begin:0.0,end :1.0).animate(CurvedAnimation(\n              parent:animation1,\n              curve:Curves.fastOutSlowIn\n          )),\n          child: child,\n        );\n    }  \n  );\n}\n")])])]),e("p",[n._v("缩放路由动画")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("return ScaleTransition(\n  scale:Tween(begin:0.0,end:1.0).animate(CurvedAnimation(\n    parent:animation1,\n    curve: Curves.fastOutSlowIn\n    )),\n    child:child\n);\n")])])]),e("p",[n._v("旋转+缩放路由动画")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("return RotationTransition(\n  turns:Tween(begin:0.0,end:1.0)\n  .animate(CurvedAnimation(\n    parent: animation1,\n    curve: Curves.fastOutSlowIn\n  )),\n  child:ScaleTransition(\n    scale:Tween(begin: 0.0,end:1.0)\n    .animate(CurvedAnimation(\n        parent: animation1,\n        curve:Curves.fastOutSlowIn\n    )),\n    child: child,\n  )\n);\n")])])]),e("p",[n._v("左右滑动路由动画")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("return SlideTransition(\n  position: Tween<Offset>(\n    begin: Offset(-1.0, 0.0),\n    end:Offset(0.0, 0.0)\n  )\n  .animate(CurvedAnimation(\n    parent: animation1,\n    curve: Curves.fastOutSlowIn\n  )),\n  child: child,\n);\n")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);