(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{230:function(e,n,a){"use strict";a.r(n);var t=a(28),r=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"typescript-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript-接口"}},[e._v("#")]),e._v(" TypeScript 接口")]),e._v(" "),a("ul",[a("li",[e._v("基础接口 ==interface==-===")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("interface LabelledValue {\n    label: string\n}\nlet printLabel = (labelledObj: LabelledValue)=>{\n    console.log(labelledObj.label)\n}\nlet obj = {\n    size: 10,\n    label: 'Size 10 Object'\n}\nprintLabel(obj);\n")])])]),a("ul",[a("li",[e._v("可选属性 ==?==")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("interface SquireConfig {\n    color?: string,\n    width?: number\n}\nlet createSquare = (config: SquireConfig): {color: string; area: number} =>{\n    let newSquare = {color: \"white\", area: 100};\n    if(config.color){\n        newSquare.color = config.color;\n    }\n    if(config.width) {\n        newSquare.area = config.width**2;\n    }\n    return newSquare\n}\nlet result = createSquare({color: \"#cccccc\"});\nconsole.log('result', result); // result { color: '#cccccc', area: 100 }\n")])])]),a("ul",[a("li",[e._v("只读属性")])]),e._v(" "),a("p",[e._v("首次赋值完成后，无法重新再次赋值。")]),e._v(" "),a("p",[e._v("==readonly==")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("interface Persion {\n    readonly age: number,\n    readonly name: string\n}\n\nlet say = (p: Persion): string => {\n    return `这是${p.name},年龄${p.age}`;\n}\n\nlet student: Persion= { name: '李四', age: 20 };\n// student.name = \"王五\"; // 无法重新给属性赋值\nlet studentOne:string = say(student);\nconsole.log(studentOne); // 这是李四,年龄20\n")])])]),a("p",[e._v("==ReadonlyArray==")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let a: number[] = [1, 2, 4, 7],\n    ro: ReadonlyArray<number> = a;\n//ro[0] = 20; // “ReadonlyArray<number>”中的索引签名仅允许读取\nconsole.log(ro[1])\n")])])]),a("p",[e._v("==任意属性==\n[propName: string]: any;")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("interface Person {\n    name: string;\n    age?: number;\n    [propName: string]: any;\n}\n\nlet tom: Person = {\n    name: 'Tom',\n    gender: 'male'\n};\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);