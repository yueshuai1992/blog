(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{204:function(t,n,e){"use strict";e.r(n);var r=e(28),s=Object(r.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h3",{attrs:{id:"js-通用单例模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-通用单例模式"}},[this._v("#")]),this._v(" JS 通用单例模式")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>单例模式</title>\n</head>\n<body>\n\t<script>\n\t// 通用的单例验证方法\n\tconst getSingle = function (fn){\n\t\tlet result;\n\t\treturn function (){\n\t\t\treturn result || (result = fn.apply(this, arguments));\n\t\t};\n\t};\n\t// 创建登录模态框\n\tconst createLoginLayer = function (){\n\t\tconst div = document.createElement('div');\n\t\tdiv.innerHTML = '我是登录模态框';\n\t\tdocument.body.appendChild(div);\n\t\treturn div;\n\t};\n\t// 为登录模态框使用单例模式\n\tconst createSingleLoginLoyer = getSingle(createLoginLayer);\n\tconst loginLayer1 = createSingleLoginLoyer(); // 第一个登录模态框\n\tconst loginLayer2 = createSingleLoginLoyer(); // 还是第一个登录模态框\n\tconsole.log(loginLayer1 === loginLayer2); // true\n\t<\/script>\n</body>\n</html>\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);